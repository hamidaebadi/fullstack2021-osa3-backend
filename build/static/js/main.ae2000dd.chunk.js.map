{"version":3,"sources":["services/phoneServices.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","contactObj","post","id","delete","newData","put","Filter","fileterField","onChangeHandler","value","onChange","PersonForm","props","onSubmitHandler","nameField","onChangeHandlerNameField","newPhoneField","onChangeHandlerPhoneField","onSubmit","type","Persons","showPhonebook","deleteHandler","map","person","name","number","onClick","Notification","msg","style","fontSize","color","backgroundColor","padding","ErroMessage","errorMsg","App","useState","persons","setPersons","newName","setNewName","newPhone","setNewPhone","filteredShow","setFilteredShow","message","setMessage","errorMessage","setErrorMessage","useEffect","phoneServices","allContacts","filter","p","match","RegExp","event","target","preventDefault","includes","window","confirm","updatableContact","find","changedData","changed","setTimeout","concat","toDelete","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae2000dd.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios'\nconst baseUrl = \"/api/persons\"\n\nconst getAllContacts = () =>{\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\n\nconst addNewContact = contactObj =>{\n    const request = axios.post(baseUrl, contactObj)\n    return request.then(response => response.data)\n}\n\nconst removeContact = (id) =>{\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst updateContact = (id, newData) =>{\n    const request = axios.put(`${baseUrl}/${id}`, newData)\n    return request.then(response => response.data)\n}\nexport default {getAllContacts, addNewContact, removeContact, updateContact}","import React, { useState,useEffect } from 'react'\nimport phoneServices from './services/phoneServices'\n\nconst Filter = ({fileterField, onChangeHandler}) => {\n  return(\n    <>\n    <form>\n        Filter shown with: \n        <input value={fileterField} onChange={onChangeHandler}/>\n      </form>\n    </>\n  )\n}\n\nconst PersonForm = (props) => {\n  const {\n    onSubmitHandler,\n    nameField,\n    onChangeHandlerNameField,\n    newPhoneField,\n    onChangeHandlerPhoneField\n  } = props\n  return (\n    <>\n    <form onSubmit={onSubmitHandler}>\n        <div>\n          name: <input value={nameField} onChange={onChangeHandlerNameField}/>\n        </div>\n        <div>\n          number: <input value={newPhoneField} onChange={onChangeHandlerPhoneField}/>\n          </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\n\nconst Persons = ({showPhonebook, deleteHandler}) => {\n  return(\n    <>\n    <ul>\n        {showPhonebook.map(person =>\n          <li key={person.name}>\n            {person.name} : {person.number} \n            <button onClick={deleteHandler} value={person.name}>delete</button>\n          </li>\n        )}\n      </ul>\n    </>\n  )\n}\n\nconst Notification = ({msg}) => {\n  const notic = {\n    fontSize: 16,\n    color: 'green',\n    backgroundColor: 'rgb(222, 222, 222)',\n    padding: 10\n  }\n  if(msg === null){\n    return null\n  }else{\n    return(\n      <>\n      <div style={notic}>{msg}</div>\n      </>\n    )\n  }\n}\n\nconst ErroMessage = ({errorMsg}) => {\n  const error = {\n    padding: 10,\n    backgroundColor: 'rbg(120, 120, 120',\n    color: 'red',\n    fontSize: 16\n  }\n  if (errorMsg === null) return null\n  return(\n    <>\n    <div style={error}> {errorMsg}</div>\n    </>\n  )\n}\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone] = useState('')\n  const [ filteredShow, setFilteredShow] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  //efect function\n  useEffect(()=>{\n    phoneServices.getAllContacts()\n    .then(allContacts => setPersons(allContacts))\n  }, [])\n  \n  //add a new contact \n  const handleForm = (event) =>{\n    event.preventDefault()\n    \n    //check whether name is already included\n    //if yes, then update info\n    const existedNames = persons.map(p => p.name)\n    if (existedNames.includes(newName)){\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const updatableContact = persons.find(p => p.name === newName)\n        const changedData = {...updatableContact, number: newPhone}\n        phoneServices.updateContact(updatableContact.id, changedData)\n        .then(changed => {\n          setPersons(persons.map(p => p.id !== updatableContact.id ? p : changed))\n          setMessage(`${newName}'s phone number updated`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n        })\n      }\n\n    }else{\n       //create person obj\n      const newPerson = {name: newName, number:newPhone}\n      phoneServices.addNewContact(newPerson)\n      .then(data => {\n        setPersons(persons.concat(data))\n        setMessage(`${newName} added to the phone book`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n      })\n    }\n\n    setNewName('')\n    setNewPhone('')\n   \n  }\n\n  //delete a contact \n  const deleteContact = (event) =>{\n    const toDelete = persons.find(p => p.name === event.target.value)\n    if(window.confirm(`Are you sure to delete ${toDelete.name}`)){\n      phoneServices.removeContact(toDelete.id)\n      .then(() => {\n        setPersons(persons.filter(p=>p.id !== toDelete.id))\n        setMessage(`${toDelete.name} deleted from phone book`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n      })\n      .catch(error =>{\n        setErrorMessage(`Error: ${toDelete.name} has already been deleted from server`)\n        setTimeout(()=>{\n          setErrorMessage(null)\n        }, 3000)\n      })\n    }\n  }\n\n  const handleNameField = (event) => setNewName(event.target.value)\n  const handlePhoneField = (event) => setNewPhone(event.target.value)\n  const handleFilter = (event) => setFilteredShow(event.target.value)\n  const showPhonebook = filteredShow ==='' ? persons : persons.filter(p => p.name.match(new RegExp(filteredShow, 'i')))\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ErroMessage errorMsg={errorMessage} />\n      <Notification msg={message} />\n      <Filter fileterField={filteredShow} onChangeHandler={handleFilter}/>\n      <h3>Add a new</h3>\n      <PersonForm\n      onSubmitHandler={handleForm}\n      nameField = {newName}\n      onChangeHandlerNameField={handleNameField}\n      newPhoneField= {newPhone}\n      onChangeHandlerPhoneField={handlePhoneField}/>\n      <h2>Numbers</h2>\n      <Persons showPhonebook={showPhonebook} deleteHandler={deleteContact}/>\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}